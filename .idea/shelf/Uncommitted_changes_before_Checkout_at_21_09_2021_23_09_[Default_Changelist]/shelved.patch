Index: app/src/main/res/values/attr.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/attr.xml	(date 1631808288221)
+++ app/src/main/res/values/attr.xml	(date 1631808288221)
@@ -0,0 +1,3 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/preloaded_fonts.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/preloaded_fonts.xml	(date 1631800307882)
+++ app/src/main/res/values/preloaded_fonts.xml	(date 1631800307882)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <array name="preloaded_fonts" translatable="false">
+        <item>@font/alice</item>
+        <item>@font/cinzel_decorative_black</item>
+    </array>
+</resources>
Index: app/src/main/res/values/font_certs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/font_certs.xml	(date 1631800244056)
+++ app/src/main/res/values/font_certs.xml	(date 1631800244056)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <array name="com_google_android_gms_fonts_certs">
+        <item>@array/com_google_android_gms_fonts_certs_dev</item>
+        <item>@array/com_google_android_gms_fonts_certs_prod</item>
+    </array>
+    <string-array name="com_google_android_gms_fonts_certs_dev">
+        <item>
+            MIIEqDCCA5CgAwIBAgIJANWFuGx90071MA0GCSqGSIb3DQEBBAUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTAeFw0wODA0MTUyMzM2NTZaFw0zNTA5MDEyMzM2NTZaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbTCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBANbOLggKv+IxTdGNs8/TGFy0PTP6DHThvbbR24kT9ixcOd9W+EaBPWW+wPPKQmsHxajtWjmQwWfna8mZuSeJS48LIgAZlKkpFeVyxW0qMBujb8X8ETrWy550NaFtI6t9+u7hZeTfHwqNvacKhp1RbE6dBRGWynwMVX8XW8N1+UjFaq6GCJukT4qmpN2afb8sCjUigq0GuMwYXrFVee74bQgLHWGJwPmvmLHC69EH6kWr22ijx4OKXlSIx2xT1AsSHee70w5iDBiK4aph27yH3TxkXy9V89TDdexAcKk/cVHYNnDBapcavl7y0RiQ4biu8ymM8Ga/nmzhRKya6G0cGw8CAQOjgfwwgfkwHQYDVR0OBBYEFI0cxb6VTEM8YYY6FbBMvAPyT+CyMIHJBgNVHSMEgcEwgb6AFI0cxb6VTEM8YYY6FbBMvAPyT+CyoYGapIGXMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEQMA4GA1UEChMHQW5kcm9pZDEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDEiMCAGCSqGSIb3DQEJARYTYW5kcm9pZEBhbmRyb2lkLmNvbYIJANWFuGx90071MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADggEBABnTDPEF+3iSP0wNfdIjIz1AlnrPzgAIHVvXxunW7SBrDhEglQZBbKJEk5kT0mtKoOD1JMrSu1xuTKEBahWRbqHsXclaXjoBADb0kkjVEJu/Lh5hgYZnOjvlba8Ld7HCKePCVePoTJBdI4fvugnL8TsgK05aIskyY0hKI9L8KfqfGTl1lzOv2KoWD0KWwtAWPoGChZxmQ+nBli+gwYMzM1vAkP+aayLe0a1EQimlOalO762r0GXO0ks+UeXde2Z4e+8S/pf7pITEI/tP+MxJTALw9QUWEv9lKTk+jkbqxbsh8nfBUapfKqYn0eidpwq2AzVp3juYl7//fKnaPhJD9gs=
+        </item>
+    </string-array>
+    <string-array name="com_google_android_gms_fonts_certs_prod">
+        <item>
+            MIIEQzCCAyugAwIBAgIJAMLgh0ZkSjCNMA0GCSqGSIb3DQEBBAUAMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDAeFw0wODA4MjEyMzEzMzRaFw0zNjAxMDcyMzEzMzRaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKEwtHb29nbGUgSW5jLjEQMA4GA1UECxMHQW5kcm9pZDEQMA4GA1UEAxMHQW5kcm9pZDCCASAwDQYJKoZIhvcNAQEBBQADggENADCCAQgCggEBAKtWLgDYO6IIrgqWbxJOKdoR8qtW0I9Y4sypEwPpt1TTcvZApxsdyxMJZ2JORland2qSGT2y5b+3JKkedxiLDmpHpDsz2WCbdxgxRczfey5YZnTJ4VZbH0xqWVW/8lGmPav5xVwnIiJS6HXk+BVKZF+JcWjAsb/GEuq/eFdpuzSqeYTcfi6idkyugwfYwXFU1+5fZKUaRKYCwkkFQVfcAs1fXA5V+++FGfvjJ/CxURaSxaBvGdGDhfXE28LWuT9ozCl5xw4Yq5OGazvV24mZVSoOO0yZ31j7kYvtwYK6NeADwbSxDdJEqO4k//0zOHKrUiGYXtqw/A0LFFtqoZKFjnkCAQOjgdkwgdYwHQYDVR0OBBYEFMd9jMIhF1Ylmn/Tgt9r45jk14alMIGmBgNVHSMEgZ4wgZuAFMd9jMIhF1Ylmn/Tgt9r45jk14aloXikdjB0MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzEUMBIGA1UEChMLR29vZ2xlIEluYy4xEDAOBgNVBAsTB0FuZHJvaWQxEDAOBgNVBAMTB0FuZHJvaWSCCQDC4IdGZEowjTAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBAUAA4IBAQBt0lLO74UwLDYKqs6Tm8/yzKkEu116FmH4rkaymUIE0P9KaMftGlMexFlaYjzmB2OxZyl6euNXEsQH8gjwyxCUKRJNexBiGcCEyj6z+a1fuHHvkiaai+KL8W1EyNmgjmyy8AW7P+LLlkR+ho5zEHatRbM/YAnqGcFh5iZBqpknHf1SKMXFh4dd239FJ1jWYfbMDMy3NS5CTMQ2XFI1MvcyUTdZPErjQfTbQe3aDQsQcafEQPD+nqActifKZ0Np0IS9L9kR/wbNvyz6ENwPiTrjV2KRkEjH78ZMcUQXg0L3BYHJ3lc69Vs5Ddf9uUGGMYldX3WfMBEmh/9iFBDAaTCK
+        </item>
+    </string-array>
+</resources>
Index: app/src/androidTest/java/ru/geeekbrains/princeschdailypicture/ExampleInstrumentedTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/ru/geeekbrains/princeschdailypicture/ExampleInstrumentedTest.kt	(date 1631030332093)
+++ app/src/androidTest/java/ru/geeekbrains/princeschdailypicture/ExampleInstrumentedTest.kt	(date 1631030332093)
@@ -0,0 +1,24 @@
+package ru.geeekbrains.princeschdailypicture
+
+import androidx.test.platform.app.InstrumentationRegistry
+import androidx.test.ext.junit.runners.AndroidJUnit4
+
+import org.junit.Test
+import org.junit.runner.RunWith
+
+import org.junit.Assert.*
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+@RunWith(AndroidJUnit4::class)
+class ExampleInstrumentedTest {
+    @Test
+    fun useAppContext() {
+        // Context of the app under test.
+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
+        assertEquals("ru.geeekbrains.princeschdailypicture", appContext.packageName)
+    }
+}
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(date 1631030330279)
+++ .gitignore	(date 1631030330279)
@@ -0,0 +1,15 @@
+*.iml
+.gradle
+/local.properties
+/.idea/caches
+/.idea/libraries
+/.idea/modules.xml
+/.idea/workspace.xml
+/.idea/navEditor.xml
+/.idea/assetWizardSettings.xml
+.DS_Store
+/build
+/captures
+.externalNativeBuild
+.cxx
+local.properties
Index: app.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
--- app.properties	(date 1631256238883)
+++ app.properties	(date 1631256238883)
@@ -0,0 +1,1 @@
+NASA_API_KEY = "10PYhHARUAAp9T8aG1j2Uxy3hZtKhxS5QN6ydmhW"
\ No newline at end of file
Index: app/src/test/java/ru/geeekbrains/princeschdailypicture/ExampleUnitTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/ru/geeekbrains/princeschdailypicture/ExampleUnitTest.kt	(date 1631030332122)
+++ app/src/test/java/ru/geeekbrains/princeschdailypicture/ExampleUnitTest.kt	(date 1631030332122)
@@ -0,0 +1,17 @@
+package ru.geeekbrains.princeschdailypicture
+
+import org.junit.Test
+
+import org.junit.Assert.*
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+class ExampleUnitTest {
+    @Test
+    fun addition_isCorrect() {
+        assertEquals(4, 2 + 2)
+    }
+}
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(date 1631030331527)
+++ settings.gradle	(date 1631030331527)
@@ -0,0 +1,2 @@
+rootProject.name = "PrinceSchDailyPicture"
+include ':app'
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
--- gradle.properties	(date 1631030330975)
+++ gradle.properties	(date 1631030330975)
@@ -0,0 +1,19 @@
+# Project-wide Gradle settings.
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+# AndroidX package structure to make it clearer which packages are bundled with the
+# Android operating system, and which are packaged with your app"s APK
+# https://developer.android.com/topic/libraries/support-library/androidx-rn
+android.useAndroidX=true
+# Kotlin code style for this project: "official" or "obsolete":
+kotlin.code.style=official
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/data/AppState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/data/AppState.kt	(date 1632145430451)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/data/AppState.kt	(date 1632145430451)
@@ -0,0 +1,14 @@
+package ru.geeekbrains.princeschdailypicture.data
+
+import ru.geeekbrains.princeschdailypicture.data.EPICreposytory.EpicServerResponseData
+import ru.geeekbrains.princeschdailypicture.data.PODrepository.PODServerResponseData
+
+sealed class AppState {
+    data class Success(
+        val serverResponseDataPOD: PODServerResponseData?,
+        val serverResponseDataEPIC: EpicServerResponseData?
+    ) : AppState()
+
+    data class Error(val error: Throwable) : AppState()
+    object Loading : AppState()
+}
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PictureOfTheDayAPI.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PictureOfTheDayAPI.kt	(date 1632137389840)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PictureOfTheDayAPI.kt	(date 1632137389840)
@@ -0,0 +1,10 @@
+package ru.geeekbrains.princeschdailypicture.data.PODrepository
+
+import retrofit2.Call
+import retrofit2.http.GET
+import retrofit2.http.Query
+
+interface PictureOfTheDayAPI {
+    @GET("planetary/apod")
+    fun getPictureOfTheDay(@Query("api_key") apiKey: String): Call<PODServerResponseData>
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PODServerResponseData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PODServerResponseData.kt	(date 1632137389835)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PODServerResponseData.kt	(date 1632137389835)
@@ -0,0 +1,13 @@
+package ru.geeekbrains.princeschdailypicture.data.PODrepository
+
+import com.google.gson.annotations.SerializedName
+
+data class PODServerResponseData(
+    @field:SerializedName("copyright") val copyright: String?,
+    @field:SerializedName("date") val date: String?,
+    @field:SerializedName("explanation") val explanation: String?,
+    @field:SerializedName("media_type") val mediaType: String?,
+    @field:SerializedName("title") val title: String?,
+    @field:SerializedName("url") val url: String?,
+    @field:SerializedName("hdurl") val hdurl: String?
+)
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PODRetrofitImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PODRetrofitImpl.kt	(date 1632137389829)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/data/PODrepository/PODRetrofitImpl.kt	(date 1632137389829)
@@ -0,0 +1,15 @@
+package ru.geeekbrains.princeschdailypicture.data.PODrepository
+
+import com.google.gson.GsonBuilder
+import retrofit2.*
+import retrofit2.converter.gson.GsonConverterFactory
+
+class PODRetrofitImpl {
+    private val baseUrl = "https://api.nasa.gov/"
+
+    fun getRetrofitImpl():PictureOfTheDayAPI{
+        return Retrofit.Builder().baseUrl(baseUrl)
+            .addConverterFactory(GsonConverterFactory.create(GsonBuilder().setLenient().create()))
+            .build().create(PictureOfTheDayAPI::class.java)
+        }
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EPICRetrofitImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EPICRetrofitImpl.kt	(date 1632140381282)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EPICRetrofitImpl.kt	(date 1632140381282)
@@ -0,0 +1,23 @@
+package ru.geeekbrains.princeschdailypicture.data.EPICreposytory
+
+import com.google.gson.GsonBuilder
+import retrofit2.Callback
+import retrofit2.Retrofit
+import retrofit2.converter.gson.GsonConverterFactory
+import ru.geeekbrains.princeschdailypicture.BuildConfig
+
+class EPICRetrofitImpl {
+
+    private val baseUrl = "https://api.nasa.gov/"
+
+    private val epicAPI = Retrofit.Builder()
+        .baseUrl(baseUrl)
+        .addConverterFactory(GsonConverterFactory.create(GsonBuilder().setLenient().create()))
+        .build().create(EPICapi::class.java)
+
+    fun getEpicAPI(date: String, callback: Callback<EpicServerResponseData>){
+        epicAPI.getEpicData(date, BuildConfig.NASA_API_KEY).enqueue(callback)
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EPICapi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EPICapi.kt	(date 1632145052563)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EPICapi.kt	(date 1632145052563)
@@ -0,0 +1,17 @@
+package ru.geeekbrains.princeschdailypicture.data.EPICreposytory
+
+import retrofit2.Call
+import retrofit2.http.GET
+import retrofit2.http.Path
+import retrofit2.http.Query
+import ru.geeekbrains.princeschdailypicture.BuildConfig
+
+interface EPICapi {
+
+    @GET("EPIC/api/natural/date/{date}?")
+    fun getEpicData(
+        @Path("date") date: String,
+        @Query("api_key") apiKey: String
+    ): Call<EpicServerResponseData>
+
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/viewmodel/EpicViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/viewmodel/EpicViewModel.kt	(date 1632145430442)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/viewmodel/EpicViewModel.kt	(date 1632145430442)
@@ -0,0 +1,45 @@
+package ru.geeekbrains.princeschdailypicture.viewmodel
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import ru.geeekbrains.princeschdailypicture.data.AppState
+import ru.geeekbrains.princeschdailypicture.data.EPICreposytory.EPICRetrofitImpl
+import ru.geeekbrains.princeschdailypicture.data.EPICreposytory.EpicServerResponseData
+
+private const val CORRUPTED_DATA = "Неполные данные"
+
+class EpicViewModel(
+    private val liveDataToObserve: MutableLiveData<AppState> = MutableLiveData(),
+    private val retrofitImpl: EPICRetrofitImpl = EPICRetrofitImpl()
+) : ViewModel() {
+
+    fun getLiveData(): LiveData<AppState> = liveDataToObserve
+
+    fun getEpicDataFromServer(date: String){
+        liveDataToObserve.postValue(AppState.Loading)
+        retrofitImpl.getEpicAPI(date, callBack)
+    }
+
+    private val callBack = object : Callback<EpicServerResponseData>{
+        override fun onResponse(
+            call: Call<EpicServerResponseData>,
+            response: Response<EpicServerResponseData>
+        ) {
+            val serverResponse: EpicServerResponseData? = response.body()
+            if (response.isSuccessful && serverResponse != null) {
+                liveDataToObserve.postValue(AppState.Success(null, response.body() as EpicServerResponseData))
+            } else {
+                liveDataToObserve.postValue(AppState.Error(Throwable("response error")))
+            }
+        }
+
+        override fun onFailure(call: Call<EpicServerResponseData>, t: Throwable) {
+            liveDataToObserve.postValue(AppState.Error(Throwable(t.message)))
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EpicServerResponseData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EpicServerResponseData.kt	(date 1632138555434)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/data/EPICreposytory/EpicServerResponseData.kt	(date 1632138555434)
@@ -0,0 +1,11 @@
+package ru.geeekbrains.princeschdailypicture.data.EPICreposytory
+
+import com.google.gson.annotations.SerializedName
+
+data class EpicServerResponseData(
+
+    @field:SerializedName("identifier") val identifier: String?,
+    @field:SerializedName("caption") val caption: String?,
+    @field:SerializedName("image") val image: String?
+
+)
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/viewmodel/MainViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/viewmodel/MainViewModel.kt	(date 1632145519679)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/viewmodel/MainViewModel.kt	(date 1632145519679)
@@ -0,0 +1,55 @@
+package ru.geeekbrains.princeschdailypicture.viewmodel
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import ru.geeekbrains.princeschdailypicture.BuildConfig
+import ru.geeekbrains.princeschdailypicture.data.PODrepository.PODRetrofitImpl
+import ru.geeekbrains.princeschdailypicture.data.PODrepository.PODServerResponseData
+import ru.geeekbrains.princeschdailypicture.data.AppState
+
+class MainViewModel(
+    private val liveDataToObserve: MutableLiveData<AppState> = MutableLiveData(),
+    private val retrofitImpl: PODRetrofitImpl = PODRetrofitImpl()
+) : ViewModel() {
+
+    fun getLiveData(): LiveData<AppState> {
+        return liveDataToObserve
+    }
+
+    fun sendServerRequest() {
+        liveDataToObserve.postValue(AppState.Loading)
+        val apiKey = BuildConfig.NASA_API_KEY
+        if (apiKey.isBlank()) {
+            AppState.Error(Throwable("You need API key"))
+        } else {
+            retrofitImpl.getRetrofitImpl().getPictureOfTheDay(apiKey).enqueue(
+                object : Callback<PODServerResponseData> {
+                    override fun onResponse(
+                        call: Call<PODServerResponseData>,
+                        response: Response<PODServerResponseData>
+                    ) {
+                        if (response.isSuccessful && response.body() != null) {
+                            liveDataToObserve.postValue(AppState.Success(response.body() as PODServerResponseData, null))
+                        } else {
+                            val message = response.message()
+                            if (message.isNullOrEmpty()) {
+                                liveDataToObserve.value =
+                                    AppState.Error(Throwable("Unidentified error"))
+                            }
+                        }
+                    }
+
+                    override fun onFailure(call: Call<PODServerResponseData>, t: Throwable) {
+                        liveDataToObserve.value = AppState.Error(t)
+                    }
+
+                }
+            )
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/res/font/cinzel_decorative_black.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/font/cinzel_decorative_black.xml	(date 1631800244051)
+++ app/src/main/res/font/cinzel_decorative_black.xml	(date 1631800244051)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<font-family xmlns:app="http://schemas.android.com/apk/res-auto"
+        app:fontProviderAuthority="com.google.android.gms.fonts"
+        app:fontProviderPackage="com.google.android.gms"
+        app:fontProviderQuery="name=Cinzel Decorative&amp;weight=900"
+        app:fontProviderCerts="@array/com_google_android_gms_fonts_certs">
+</font-family>
Index: app/src/main/res/font/alice.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/font/alice.xml	(date 1631800307839)
+++ app/src/main/res/font/alice.xml	(date 1631800307839)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<font-family xmlns:app="http://schemas.android.com/apk/res-auto"
+        app:fontProviderAuthority="com.google.android.gms.fonts"
+        app:fontProviderPackage="com.google.android.gms"
+        app:fontProviderQuery="Alice"
+        app:fontProviderCerts="@array/com_google_android_gms_fonts_certs">
+</font-family>
Index: app/src/main/res/layout/fragment_epic.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_epic.xml	(date 1632144638104)
+++ app/src/main/res/layout/fragment_epic.xml	(date 1632144638104)
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/rootEpicFragment"
+    android:padding="@dimen/def_padding">
+
+    <DatePicker
+        android:id="@+id/epicDatePicker"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:datePickerMode="spinner"
+        android:calendarViewShown="false"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintBottom_toTopOf="@id/epicImageView"
+        android:background="@color/textColor"
+        />
+
+    <ImageView
+        android:id="@+id/epicImageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/epicDatePicker"/>
+
+    <FrameLayout
+        android:id="@+id/loadingLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="gone"
+        android:background="@color/mainBackground"
+        tools:visibility="visible">
+
+        <ProgressBar
+            style="?android:attr/progressBarStyleLarge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center" />
+    </FrameLayout>
+
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_marsrover.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_marsrover.xml	(date 1632136626052)
+++ app/src/main/res/layout/fragment_marsrover.xml	(date 1632136626052)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:padding="@dimen/def_padding">
+
+    <DatePicker
+        android:id="@+id/marsRoverDatePicker"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@color/textColor"
+        android:datePickerMode="spinner"
+        android:calendarViewShown="false"
+        app:layout_constraintBottom_toTopOf="@id/marsRoverImageView"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <ImageView
+        android:id="@+id/marsRoverImageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/marsRoverDatePicker"/>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_insight.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_insight.xml	(date 1632058107333)
+++ app/src/main/res/layout/fragment_insight.xml	(date 1632058107333)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:contentDescription="@string/default_chip"
+        android:scaleType="centerCrop"
+        tools:srcCompat="@drawable/insight_background" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:padding="@dimen/def_padding">
+
+        <ImageView
+            android:id="@+id/insight_back"
+            android:layout_width="@dimen/insight_back_width"
+            android:layout_height="@dimen/insight_back_height"
+            android:src="@drawable/insight_rectangle"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <com.google.android.material.textview.MaterialTextView
+            android:id="@+id/insight_header"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textSize="@dimen/insight_header_size"
+            app:layout_constraintBottom_toTopOf="@id/insight_date"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="@id/insight_back" />
+
+        <com.google.android.material.textview.MaterialTextView
+            android:id="@+id/insight_date"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textSize="@dimen/insight_text_size"
+            app:layout_constraintBottom_toTopOf="@id/insight_high"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/insight_header" />
+
+        <com.google.android.material.textview.MaterialTextView
+            android:id="@+id/insight_high"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textSize="@dimen/insight_text_size"
+            app:layout_constraintBottom_toTopOf="@id/insight_low"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/insight_date" />
+
+        <com.google.android.material.textview.MaterialTextView
+            android:id="@+id/insight_low"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textSize="@dimen/insight_text_size"
+            app:layout_constraintBottom_toBottomOf="@id/insight_back"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/insight_high" />
+
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_settings.xml	(date 1631813313503)
+++ app/src/main/res/layout/fragment_settings.xml	(date 1631813313503)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context=".ui.main.SettingsFragment"
+    android:id="@+id/themeChanger">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_marginTop="@dimen/space_height"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+    <com.google.android.material.button.MaterialButton
+        android:id="@+id/changeThemeMain"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:backgroundTint="@color/purple_500"
+        android:text="@string/set_main_theme"
+        app:layout_constraintBottom_toTopOf="@id/changeThemeMars"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <com.google.android.material.button.MaterialButton
+        android:id="@+id/changeThemeMars"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:backgroundTint="@color/darkMars"
+        android:text="@string/set_marsian_theme"
+        app:layout_constraintBottom_toTopOf="@id/changeThemeVenus"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/changeThemeMain" />
+
+    <com.google.android.material.button.MaterialButton
+        android:id="@+id/changeThemeVenus"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:backgroundTint="@color/darkVenus"
+        android:text="@string/set_venerain_theme"
+        android:textColor="@color/black"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/changeThemeMars" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <com.google.android.material.bottomappbar.BottomAppBar
+        android:id="@+id/bottom_app_bar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom"
+        app:fabAlignmentMode="center"
+        app:fabAnimationMode="scale"
+        app:hideOnScroll="true"
+        app:layout_scrollFlags="scroll|enterAlways"
+        app:navigationIcon="@drawable/ic_baseline_menu_24" />
+
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/fab"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_anchor="@id/bottom_app_bar"
+        app:srcCompat="@drawable/ic_plus_fab" />
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(date 1631030331285)
+++ app/proguard-rules.pro	(date 1631030331285)
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(date 1631030331179)
+++ app/.gitignore	(date 1631030331179)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/SettingsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/SettingsFragment.kt	(date 1631812998492)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/SettingsFragment.kt	(date 1631812998492)
@@ -0,0 +1,89 @@
+package ru.geeekbrains.princeschdailypicture.ui.main
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.MenuItem
+import android.view.View
+import android.view.ViewGroup
+import android.widget.Toast
+import androidx.core.content.ContextCompat
+import androidx.fragment.app.Fragment
+import com.google.android.material.bottomappbar.BottomAppBar
+import ru.geeekbrains.princeschdailypicture.MainActivity
+import ru.geeekbrains.princeschdailypicture.R
+import ru.geeekbrains.princeschdailypicture.THEME_ID
+import ru.geeekbrains.princeschdailypicture.databinding.FragmentSettingsBinding
+
+class SettingsFragment : Fragment() {
+
+    private var _binding: FragmentSettingsBinding? = null
+    val binding: FragmentSettingsBinding
+        get() {
+            return _binding!!
+        }
+
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        _binding = FragmentSettingsBinding.inflate(inflater)
+        setActionBar()
+        return binding.root
+    }
+
+    private fun setActionBar() {
+        (context as MainActivity).setSupportActionBar(binding.bottomAppBar)
+        setHasOptionsMenu(true)
+        with(binding) {
+            fab.setImageDrawable(
+                ContextCompat.getDrawable(
+                    requireContext(),
+                    R.drawable.ic_back_fab
+                )
+            )
+            fab.setOnClickListener {
+                activity?.supportFragmentManager?.popBackStack()
+            }
+        }
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        with(binding) {
+            changeThemeMain.setOnClickListener {
+                activity?.let {
+                    it as MainActivity
+                    THEME_ID = R.style.MainTheme
+                    it.recreate()
+                }
+            }
+
+            changeThemeMars.setOnClickListener {
+                activity?.let {
+                    it as MainActivity
+                    THEME_ID = R.style.MarsTheme
+                    it.recreate()
+                }
+            }
+
+            changeThemeVenus.setOnClickListener {
+                activity?.let {
+                    it as MainActivity
+                    THEME_ID = R.style.VenusTheme
+                    it.recreate()
+                }
+            }
+        }
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+        _binding = null
+    }
+
+    companion object {
+        fun newInstance() = SettingsFragment()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/MarsRoverFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/MarsRoverFragment.kt	(date 1632056332148)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/MarsRoverFragment.kt	(date 1632056332148)
@@ -0,0 +1,34 @@
+package ru.geeekbrains.princeschdailypicture.ui.main
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.Fragment
+import ru.geeekbrains.princeschdailypicture.databinding.FragmentMarsroverBinding
+
+class MarsRoverFragment : Fragment() {
+
+    var _binding: FragmentMarsroverBinding? = null
+    val binding: FragmentMarsroverBinding
+        get() {
+            return _binding!!
+        }
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        _binding =  FragmentMarsroverBinding.inflate(inflater)
+        return  binding.root
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+        _binding = null
+    }
+
+    companion object {
+        fun newInstance() = MarsRoverFragment()
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/EpicFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/EpicFragment.kt	(date 1632145430459)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/EpicFragment.kt	(date 1632145430459)
@@ -0,0 +1,82 @@
+package ru.geeekbrains.princeschdailypicture.ui.main
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModelProvider
+import coil.api.load
+import ru.geeekbrains.princeschdailypicture.R
+import ru.geeekbrains.princeschdailypicture.data.AppState
+import ru.geeekbrains.princeschdailypicture.databinding.FragmentEpicBinding
+import ru.geeekbrains.princeschdailypicture.viewmodel.EpicViewModel
+
+class EpicFragment : Fragment() {
+
+    private var _binding: FragmentEpicBinding? = null
+    val binding: FragmentEpicBinding
+        get() {
+            return _binding!!
+        }
+
+    private val viewModel: EpicViewModel by lazy {
+        ViewModelProvider(this).get(EpicViewModel::class.java)
+    }
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        _binding =  FragmentEpicBinding.inflate(inflater)
+        return  binding.root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        viewModel.getLiveData().observe(viewLifecycleOwner, {renderData(it)})
+        viewModel.getEpicDataFromServer("2021-09-17")
+    }
+
+    private fun renderData(data: AppState) {
+        when (data){
+
+            is AppState.Loading -> {
+                binding.loadingLayout.show()
+            }
+            is AppState.Error -> {
+                with(binding) {
+                    rootEpicFragment.showMessage(data.error.toString())
+                }
+            }
+
+            is AppState.Success -> {
+                val serverResponseData = data.serverResponseDataEPIC
+                val image = serverResponseData?.image
+                if (image.isNullOrEmpty()){
+                    with(binding) {
+                        rootEpicFragment.showMessage(getString(R.string.url_null_or_empty))
+                    }
+                } else {
+                    with(binding){
+                        loadingLayout.hide()
+                        epicDatePicker.updateDate(2021,9,17)
+                        epicImageView.load("https://epic.gsfc.nasa.gov/archive/natural/2021/09/17/jpg/${serverResponseData.image}.jpg"){
+                            error(R.drawable.ic_no_photo_vector)
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+        _binding = null
+    }
+
+    companion object {
+        fun newInstance() = EpicFragment()
+    }
+
+}
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/ViewPagerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/ViewPagerAdapter.kt	(date 1632058772138)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/ViewPagerAdapter.kt	(date 1632058772138)
@@ -0,0 +1,39 @@
+package ru.geeekbrains.princeschdailypicture.ui.main
+
+import androidx.fragment.app.Fragment
+import androidx.fragment.app.FragmentManager
+import androidx.fragment.app.FragmentPagerAdapter
+
+private const val MAIN_FRAGMENT = 0
+private const val EPIC_FRAGMENT = 1
+private const val INSIGHT_FRAGMENT = 2
+private const val MARSROVER_FRAGMENT = 3
+
+class ViewPagerAdapter(private val fragmentManager: FragmentManager) : FragmentPagerAdapter(fragmentManager) {
+
+    private val fragments = arrayOf(MainFragment(), EpicFragment(), InsightFragment(), MarsRoverFragment())
+
+    override fun getCount(): Int {
+        return fragments.size
+    }
+
+    override fun getItem(position: Int): Fragment {
+        return when (position){
+            0 -> fragments[MAIN_FRAGMENT]
+            1 -> fragments[EPIC_FRAGMENT]
+            2 -> fragments[INSIGHT_FRAGMENT]
+            3 -> fragments[MARSROVER_FRAGMENT]
+            else -> fragments[MAIN_FRAGMENT]
+        }
+    }
+
+    override fun getPageTitle(position: Int): CharSequence? {
+        return when (position) {
+            0 -> "MAIN_FRAGMENT"
+            1 -> "EPIC_FRAGMENT"
+            2 -> "INSIGHT_FRAGMENT"
+            3 -> "MARSROVER_FRAGMENT"
+            else -> "MAIN_FRAGMENT"
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/InsightFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/InsightFragment.kt	(date 1632056332143)
+++ app/src/main/java/ru/geeekbrains/princeschdailypicture/ui/main/InsightFragment.kt	(date 1632056332143)
@@ -0,0 +1,33 @@
+package ru.geeekbrains.princeschdailypicture.ui.main
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.Fragment
+import ru.geeekbrains.princeschdailypicture.databinding.FragmentInsightBinding
+
+class InsightFragment : Fragment() {
+
+    var _binding: FragmentInsightBinding? = null
+    val binding: FragmentInsightBinding
+        get() {
+            return _binding!!
+        }
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        _binding =  FragmentInsightBinding.inflate(inflater)
+        return  binding.root
+    }
+
+    override fun onDestroy() {
+        super.onDestroy()
+        _binding = null
+    }
+
+    companion object {
+        fun newInstance() = InsightFragment()
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/insight_rectangle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/insight_rectangle.xml	(date 1632053662267)
+++ app/src/main/res/drawable/insight_rectangle.xml	(date 1632053662267)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item>
+        <shape android:shape="rectangle">
+            <solid android:color="@color/halfOpacityBlack"/>
+        </shape>
+    </item>
+
+</selector>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_no_photo_vector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_no_photo_vector.xml	(date 1631538686795)
+++ app/src/main/res/drawable/ic_no_photo_vector.xml	(date 1631538686795)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#782D2D"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M11,15h2v2h-2zM11,7h2v6h-2zM11.99,2C6.47,2 2,6.48 2,12s4.47,10 9.99,10C17.52,22 22,17.52 22,12S17.52,2 11.99,2zM12,20c-4.42,0 -8,-3.58 -8,-8s3.58,-8 8,-8 8,3.58 8,8 -3.58,8 -8,8z"/>
+</vector>
Index: app/src/main/res/drawable/ic_test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_test.xml	(date 1631801736709)
+++ app/src/main/res/drawable/ic_test.xml	(date 1631801736709)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#B6B1BC"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M1,21h22L12,2 1,21zM13,18h-2v-2h2v2zM13,14h-2v-4h2v4z"/>
+</vector>
